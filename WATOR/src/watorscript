#!/bin/bash
# \file watorscript
# \author Leonardo Cariaggi (503140)
#    
#  Si dichiara che il contenuto di questo file e' in ogni sua parte opera
#  originale dell' autore.  

# variabili usate per tenere traccia degli argomenti ricevuti
receivedfish=0
receivedshark=0
receivedfile=0

# variabile in cui salvo il nome del file passato come parametro
file=""

case $# in
	( 1|2|3 ) 
	for arg in $@
	do
		case $arg in
			# solo una tra -f e -s è consentita
			( "-f" ) if(($receivedfish == 1 || $receivedshark == 1)); then
						echo "Too many arguments" >&2
						exit 1
					 else receivedfish=1
					 fi;;
						
			( "-s" ) if(($receivedshark == 1 || $receivedfish == 1 )); then
						echo "Too many arguments" >&2
						exit 1
					 else receivedshark=1
					 fi;;
					 
			( "--help" ) echo "Usage: ./watorscript [-f] [-s] [--help] [filename]" >&2
						 exit 1;;
			
			# i casi file non valido e opzione non riconosciuta sono trattati allo stesso modo
			( * ) if [ ! -f $arg ]; then
					echo "Invalid planet file or unrecognized option" >&2
					exit 1
				  
				  	elif(($receivedfile == 1)); then
				  		echo "Too many arguments" >&2
						exit 1
					else 
						receivedfile=1
						file=$arg
				fi;;
		esac
	done;;
	( * ) echo "Wrong number of arguments" >&2
		  exit 1;;
esac

# il file non è stato passato come parametro
if(($receivedfile == 0)); then
	echo "Missing file" >&2
	exit 1
fi

exec 34< $file

# variabili in cui memorizzo i valori di righe/colonne
rows=0
cols=0

# con l'opzione -u leggo dal file descriptor
read -u 34 rows
if ! [[ $rows =~ ^[1-9][0-9]*+$ ]]; then # CONTROLLO CON UNA REGULAR EXPRESSION SE HO UN INTERO
	echo "INVALID ROWS" >&2
	exit 1
fi

read -u34 cols
if ! [[ $cols =~ ^[1-9][0-9]*+$ ]]; then
	echo "INVALID COLUMNS" >&2
	exit 1
fi

# variabili con cui controllo la corretta formattazione del file
contcell=0
contblank=0
expectedcells=$(( $cols*$rows )) # numero di celle che mi devo aspettare di leggere

# numero di pesci/squali incontrati
sharkcount=0
fishcount=0

# leggo un carattere alla volta
while read -u34 -n1 char
do
	case "$char" in
	
		( 'W' ) (( contcell++ ));;
		( 'F' )  (( contcell++ ))
				 (( fishcount++ ));;
		( 'S' )  (( contcell++ ))
				 (( sharkcount++ ));;
		
		( ''|'\n' ) (( contblank++ ));;
		
		(*) echo "$char: INVALID CHAR" >&2; exit 1;;
			
	esac
done #< $file

# il file è mal formattato
if (($contcell != $contblank || $contcell != $expectedcells)); then 
	echo "INVALID FORMAT" >&2
	exit 1
fi

# dai controlli precedenti, è possibile supporre che receivedfish e receivedshark non sia entrambe uguali a 1
if (($receivedfish == 1)); then
	echo "$fishcount" #fishes
elif (($receivedshark == 1)); then
	echo "$sharkcount" #sharks
fi

# chiudo il file
exec 34>&-

echo "OK" >&2
